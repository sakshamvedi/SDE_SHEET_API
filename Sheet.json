
const Array = [
    "Count Digits",
    "Reverse a Number",
    "Check Palindrome",
    "GCD Or HCF",
    "Armstrong Numbers",
    "Print all Divisors",
    "Check for Prime",
    "Step 1.5: Learn Basic Recursion",
    "Understand recursion by print something N times",
    "Print name N times using recursionPrint 1 to N using recursionPrint N to 1 using recursionSum of first N numbers",
    "Factorial of N numbers",
    "Reverse an array",
    "Check if a string is palindrome or notFibonacci NumberStep 1.6: Learn Basic Hashing",
    "Counting frequencies of array elements",
    "Find the highest/lowest frequency element",
    "Selection Sort",
    "Bubble SortInsertion SortStep",
    "Merge Sort",
    "Recursive Bubble Sort",
    "Recursive Insertion Sort",
    "Quick Sort",
    "Largest Element in an Array",
    "Second Largest Element in an Array without sorting",
    "Check if the array is sorted",
    "Remove duplicates from Sorted array",
    "Left Rotate an array by one place",
    "Left rotate an array by D places",
    "Move Zeros to endLinear SearchFind the Union and intersection of two sorted arrays",
    "Find missing number in an array",
    "Maximum Consecutive Ones",
    "Find the number that appears once, and other numbers twice.Longest subarray with given sum(Positives)",
    "Longest subarray with given sum(Positives + Negatives)",
    "2Sum Problem",
    "Sort an array of 0\u2019s 1\u2019s and 2\u2019sMajority Element (>n/2 times)",
    "Kadane\u2019s Algorithm, maximum subarray sum",
    "Print the subarray with maximum sum",
    "Stock Buy and Sell",
    "Rearrange the array in alternating positive and negative items",
    "Next PermutationLeaders in an Array problem",
    "Longest Consecutive Sequence in an ArraySet Matrix ZerosRotate Matrix by 90 degrees",
    "Print the matrix in spiral mannerFind number of subarrays with sum K",
    "Pascal\u2019s Triangle",
    "Majority Element (n/3 times)",
    "3-Sum Problem4-Sum Problem",
    "Count number of subarrays with given xor",
    "KMerge Overlapping Subintervals",
    "Merge two sorted arrays without extra spaceFind the repeating and missing numberCount Inversions",
    "Reverse Pairs",
    "Maximum Product Subarray",
    "Binary Search to find X in sorted array",
    "Implement Lower Bound",
    "Implement Upper Bound",
    "Search Insert Position",
    "Floor/Ceil in Sorted ArrayFind the first or last occurrence of a given number in a sorted array",
    "Count occurrences of a number in a sorted array with duplicates",
    "Find peak element",
    "Search in Rotated Sorted Array I",
    "Search in Rotated Sorted Array II",
    "Find minimum in Rotated Sorted Array",
    "Find out how many times has an array been rotated",
    "Single element in a Sorted Array",
    "Step 4.2: Applying BS on 2D Arrays",
    "Find the row with maximum number of 1\u2019s",
    "Search in a 2 D matrix",
    "Find Peak Element",
    "Matrix Median",
    "Step 4.3: Find Answers by BS in Search Space",
    "Find square root of a number in log n",
    "Find the Nth root of a number using binary search",
    "Koko Eating Bananas",
    "Minimum days to make M bouquets",
    "Find the smallest Divisor",
    "Capacity to Ship Packages within D Days",
    "Median of two sorted arrays",
    "Aggressive CowsBook Allocation Problem",
    "Split array \u2013 Largest Sum",
    "Kth Missing Positive Number",
    "Minimize Max Distance to Gas Station",
    "Median of 2 sorted arraysKth element of 2 sorted arrays",
    "Step 5: Strings  Basic and Medium",
    "String has extremely hard problems for beginners in its hard section, so it is covered in the later half",
    "String has lesser problems, because most of the string problems have hard concepts like DP or others which are covered in different topics.",
    "Step 5.1: Basic and Easy String Problems",
    "Remove outermost Paranthesis",
    "Reverse words in a given string / Palindrome Check",
    "Largest odd number in a string",
    "Longest Common Prefix",
    "Isomorphic String",
    "check whether one string is a rotation of another",
    "Check if two strings are anagram of each other",
    "Step 5.2: Medium String Problems",
    "Sort Characters by frequency",
    "Maximum Nesting Depth of Paranthesis",
    "Roman Number to Integer and vice versa",
    "Implement Atoi",
    "Count Number of Substrings",
    "Longest Palindromic Substring Do it without DP",
    "Sum of Beauty of all substring",
    "Reverse Every Word in A String",
    "Step 6: Learn LinkedList  Single/Double LL, Medium, Hard",
    "Step 6.1: Learn 1D LinkedList",
    "Introduction to LinkedList, learn about struct, and how is node represented",
    "Inserting a node in LinkedList",
    "Deleting a node in LinkedList",
    "Find the length of the linkedlist  learn traversal",
    "Search an element in the LL",
    "Step 6.2: Learn Doubly LinkedList",
    "Introduction to DLL, learn about struct, and how is node represented",
    "Insert a node in DLL",
    "Delete a node in DLL",
    "Reverse a DLL",
    "Step 6.3: Medium Problems of LL",
    "Middle of a LinkedList  TortoiseHare Method",
    "Reverse a LinkedList  Iterative",
    "Reverse a LL  Recursive",
    "Detect a loop in LL",
    "Find the starting point in LLLength of Loop in LL",
    "Check if LL is palindrome or notSegrregate odd and even nodes in LL",
    "Remove Nth node from the back of the LLDelete the middle node of LL",
    "Sort LL",
    "Sort a LL of 0\u2019s 1\u2019s and 2\u2019s by changing links",
    "Find the intersection point of Y LLAdd 1 to a number represented by LL",
    "Add 2 numbers in LLStep 6.4: Medium Problems of DLL",
    "Delete all occurrences of a key in DLL",
    "Find pairs with given sum in DLL",
    "Remove duplicates from sorted DLL",
    "Step 6.5: Hard Problems of LL",
    "Reverse LL in group of given size KRotate a LLFlattening of LLClone a Linked List with random and next pointer",
    "Step 7: Recursion  PatternWise",
    "Please complete the basic recursion questions in Step 1",
    "To learn completely recursion, watch this playlist -> Link",
    "Step 7.1: Get a Strong Hold",
    "Recursive Implementation of atoi()",
    "Pow(x, n)Count Good numbers",
    "Sort a stack using recursion",
    "Reverse a stack using recursion",
    "Step 7.2: Subsequences Pattern",
    "Generate all binary strings",
    "Generate Paranthesis",
    "Print all subsequences/Power SetLearn All Patterns of Subsequences (Theory)Count all subsequences with sum K",
    "Check if there exists a subsequence with sum K",
    "Combination Sum",
    "Combination Sum-IISubset Sum-I",
    "Subset Sum-IICombination Sum \u2013 III",
    "Letter Combinations of a Phone number",
    "Step 7.3: Trying out all Combos / Hard",
    "Palindrome Partitioning",
    "Word Search",
    "N Queen",
    "Rat in a Maze",
    "Word Break",
    "M Coloring ProblemSudoko SolverExpression Add Operators",
    "Step 8: Bit Manipulation  Concepts & Problems",
    "& Advanced Maths",
    "It is one of the smallest topics in DSA, learn the basic concepts.",
    "There are only few problems which are repeatedly asked in Interviews which have been added.",
    "Step 8.1: Learn Bit Manipulation",
    "Introduction to Bit Manipulation  Theory",
    "Check if the i-th bit is set or not",
    "Check if a number is odd or not",
    "Check if a number is power of 2 or not",
    "Count the number of set bits",
    "Set/Unset the rightmost unset bit",
    "Swap two numbers",
    "Divide two integers without using multiplication, division and mod operator",
    "Step 8.2: Interview Problems",
    "Count number of bits to be flipped to convert A to B",
    "Find the number that appears odd number of times",
    "Power Set",
    "Fnd xor of numbers from L to R",
    "Find the two numbers appearing odd number of times",
    "Step 8.3: Advanced Maths",
    "Print Prime Factors of a Number",
    "All Divisors of a Number",
    "Sieve of Eratosthenes",
    "Find Prime Factorisation of a Number using Sieve",
    "Power(n, x)",
    "Step 9: Stack and Queues  Pre-In-Post-fix, Monotonic Stack",
    "Step 9.1: Learning",
    "Implement Stack using ArraysImplement Queue using Arrays",
    "Implement Stack using Queue",
    "Implement Queue using StackImplement stack using Linkedlist",
    "Implement queue using Linkedlist",
    "Check for balanced paranthesisImplement Min StackStep 9.2: Prefix, Infix, PostFix Conversion Problems",
    "Infix to Postfix Conversion using Stack",
    "Prefix to Infix Conversion",
    "Prefix to Postfix Conversion",
    "Postfix to Prefix Conversion",
    "Postfix to Infix",
    "Convert Infix To Prefix Notation",
    "Step 9.3: Monotonic Stack/Queue Problems  VVV. Imp",
    "Next Greater ElementNext Greater Element 2",
    "Next Smaller Element",
    "Number of NGEs to the right",
    "Trapping Rainwater",
    "Sum of subarray minimum",
    "Stock span problem",
    "Asteroid Collision",
    "Sum of subarray ranges",
    "Remove k Digits",
    "Largest rectangle in a histogram",
    "Maximal Rectangles",
    "Step 9.4: Implementation Problems",
    "Sliding Window maximum",
    "Stock Span Problem",
    "The Celebrity Problem",
    "Rotten OrangesLRU cache (IMPORTANT)",
    "LFU cache",
    "Step 10: Sliding Window & Two Pointer Combined Problems",
    "Step 10.1: Medium Problems",
    "Longest Substring Without Repeating Characters",
    "Max Consecutive Ones III",
    "Fruit Into Baskets",
    "longest repeating character replacement",
    "Binary subarray with sum",
    "Count number of nice subarrays",
    "Number of substring containing all three characters",
    "Maximum point you can obtain from cards",
    "Step 10.2: Hard Problems",
    "Longest Substring with At Most K Distinct Characters",
    "Subarray with k different integers",
    "Minimum Window Substring",
    "Minimum Window Subsequence",
    "Problem 2Step 11: Heaps  Learning, Medium, Hard Problems",
    "Step 11.1: Learning",
    "Introduction to Priority Queues using Binary Heaps",
    "Min Heap and Max Heap Implementation",
    "Check if an array represents a min-heap or not",
    "Convert min Heap to max Heap",
    "Step 11.2: Medium Problems",
    "Kth largest element in an array  use priority queue",
    "Kth smallest element in an array  use priority queue",
    "Sort K sorted array",
    "Merge M sorted Lists",
    "Replace each array element by its corresponding rank",
    "Task Scheduler",
    "Hands of Straights",
    "Step 11.3: Hard Problems",
    "Design twitter",
    "Connect `n` ropes with minimal cost",
    "Kth largest element in a stream of running integers",
    "Maximum Sum Combination",
    "Find Median from Data Stream",
    "K most frequent elements",
    "Step 12: Greedy Algorithms  Easy, Medium/Hard",
    "Step 12.1: Easy Problems",
    "Assign Cookies",
    "Fractional Knapsack Problem",
    "Greedy algorithm to find minimum number of coins",
    "Lemonade Change",
    "Valid Paranthesis Checker",
    "Step 12.2: Medium/Hard",
    "N meetings in one room",
    "Jump Game",
    "Jump Game 2",
    "Minimum number of platforms required for a railway",
    "Job sequencing Problem",
    "Candy",
    "Program for Shortest Job First (or SJF) CPU Scheduling",
    "Program for Least Recently Used (LRU) Page Replacement Algorithm",
    "Insert Interval",
    "Merge Intervals",
    "Non-overlapping Intervals",
    "Step 13: Binary Trees  Traversals, Medium and Hard Problems",
    "An entire playlist is made on it, it is more than enough",
    "Step 13.1: Traversals",
    "Introduction to Trees",
    "Binary Tree Representation in C++",
    "Binary Tree Representation in Java",
    "Binary Tree Traversals in Binary Tree",
    "Preorder Traversal of Binary Tree",
    "Inorder Traversal of Binary Tree",
    "Post-order Traversal of Binary Tree",
    "Level order Traversal / Level order traversal in spiral form",
    "Iterative Preorder Traversal of Binary Tree",
    "Iterative Inorder Traversal of Binary Tree",
    "Post-order Traversal of Binary Tree using 2 stack",
    "Post-order Traversal of Binary Tree using 1 stack",
    "Preorder, Inorder, and Postorder Traversal in one Traversal",
    "Step 13.2: Medium Problems",
    "Height of a Binary Tree",
    "Check if the Binary tree is height-balanced or not",
    "Diameter of Binary Tree",
    "Maximum path sum",
    "Check if two trees are identical or not",
    "Zig Zag Traversal of Binary Tree",
    "Boundary Traversal of Binary Tree",
    "Vertical Order Traversal of Binary Tree",
    "Top View of Binary Tree",
    "Bottom View of Binary Tree",
    "Right/Left View of Binary Tree",
    "Symmetric Binary Tree",
    "Step 13.1: Hard Problems",
    "Root to Node Path in Binary Tree",
    "LCA in Binary Tree",
    "Maximum width of a Binary Tree",
    "Check for Children Sum Property",
    "Print all the Nodes at a distance of K in a Binary Tree",
    "Minimum time taken to BURN the Binary Tree from a Node",
    "Count total Nodes in a COMPLETE Binary Tree",
    "Requirements needed to construct a Unique Binary Tree | Theory",
    "LinkConstruct Binary Tree from inorder and preorder",
    "Construct the Binary Tree from Postorder and Inorder Traversal",
    "Serialize and deserialize Binary Tree",
    "Morris Preorder Traversal of a Binary Tree",
    "Morris Inorder Traversal of a Binary Tree",
    "Flatten Binary Tree to LinkedList",
    "Step 14: Binary Search Trees  Concept and Problems",
    "An entire playlist is made on it, it is more than enough",
    "Step 14.1: Concepts",
    "Introduction to Binary Search TreeSearch in a Binary Search Tree",
    "Find Min/Max in BST",
    "Step 14.2: Practice Problems",
    "Ceil in a Binary Search Tree",
    "Floor in a Binary Search Tree",
    "Insert a given Node in Binary Search Tree",
    "Delete a Node in Binary Search Tree",
    "Find K-th smallest/largest element in BST",
    "Check if a tree is a BST or BT",
    "LCA in Binary Search Tree",
    "Construct a BST from a preorder traversal",
    "Inorder Successor/Predecessor in BST",
    "Merge 2 BST\u2019sTwo Sum In BST | Check if there exists a pair with Sum K",
    "Recover BST | Correct BST with two nodes swapped",
    "Largest BST in Binary Tree",
    "Step 15: Graphs  Concepts & Problems",
    "The new Graph playlist is under progress, you can check here -> Link",
    "In case you have lesser time, you can check the old graph series here -> Link",
    "Step 15.1: Learning",
    "Graph and Types",
    "Graph Representation | C++",
    "Graph Representation | Java",
    "Connected Components | Logic Explanation",
    "BFS",
    "DFS",
    "Step 15.2: Problems on BFS/DFS",
    "Number of provinces (leetcode)",
    "Connected Components Problem in MatrixRotten Oranges",
    "Flood fill",
    "Cycle Detection in unirected Graph (bfs)",
    "Cycle Detection in undirected Graph (dfs)",
    "0/1 Matrix (Bfs Problem)",
    "Surrounded Regions (dfs)",
    "Number of Enclaves  flood fill implementation \u2013 multisource",
    "Word ladder \u2013 1",
    "Word ladder \u2013 2Number of Distinct Islands  dfs multisource",
    "Bipartite Graph (DFS)",
    "Cycle Detection in Directed Graph (DFS)",
    "Step 15.3: Topo Sort and Problems",
    "Topo Sort",
    "Kahn\u2019s Algorithm",
    "Cycle Detection in Directed Graph (BFS)",
    "Course Schedule \u2013 I",
    "Course Schedule \u2013 II",
    "Find eventual safe states",
    "Alien dictionary",
    "Step 15.4: Shortest Path Algorithms and Problems",
    "Shortest Path in UG with unit weights",
    "Shortest Path in DAG",
    "Djisktra\u2019s Algorithm",
    "Why priority Queue is used in Djisktra\u2019s Algorithm",
    "Shortest path in a binary maze",
    "Path with minimum effort",
    "Cheapest flights within k stops",
    "Network Delay timeNumber of ways to arrive at destination",
    "Minimum steps to reach end from start by performing multiplication and mod operations with array elements",
    "Bellman Ford Algorithm",
    "Floyd Warshal Algorithm",
    "Find the city with the smallest number of neighbors in a threshold distance",
    "Step 15.5: MinimumSpanningTree/Disjoint Set and Problems",
    "Minimum Spanning Tree",
    "Prim\u2019s Algorithm",
    "Disjoint Set  Union by Rank",
    "Disjoint Set  Union by Size",
    "Kruskal\u2019s Algorithm",
    "Number of operations to make network connected",
    "Most stones removed with same rows or columns",
    "Accounts merge",
    "Number of island II",
    "Making a Large Island",
    "Swim in rising water",
    "Step 15.6: Other Algorithms",
    "Bridges in Graph",
    "Articulation Point",
    "Kosaraju\u2019s Algorithm"
];
